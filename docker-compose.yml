version: '3.8'

services:
  backend:
    build:
      context: ./backend
    container_name: go_backend
    environment:
     - BACKEND_PORT=${BACKEND_PORT}
     - DATABASE_URL=${DATABASE_URL}
    networks:
      - backend_network
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    depends_on:
      - postgres

  postgres:
    build:
      context: ./database
    container_name: postgres_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - backend_network
    volumes:
      - postgres_data:/var/lib/postgresql/data  
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}

  pinger:
    build: 
      context: ./pinger
    container_name: go_pinger
    network_mode: "host"  
    environment:
      - BACKEND_API_URL=${BACKEND_API_URL}
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

networks:
  backend_network:
    driver: bridge

volumes:
  postgres_data:
